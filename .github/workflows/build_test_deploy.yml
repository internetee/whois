name: build, test and deploy test environment on pr

on:
  push:
    branches:
    - add-build-test-pipeline
  pull_request:
    branches:
    - main

  workflow_dispatch:

jobs:

  build_and_test:
    runs-on: ubuntu-20.04
  
    steps:

        - uses: actions/checkout@v2

        - name: Set image tag
          run: |
            SHORT_SHA=$(git describe --always)
            echo "internetee/whois:RC_$SHORT_SHA" > TAG

        - name: Set ENV for codeclimate (push)
          if: github.event_name == 'push'
          run: |
            echo "$GITHUB_REF" > GIT_BRANCH
            echo "$GITHUB_SHA" > GIT_COMMIT_SHA

        - name: Set ENV for codeclimate (pull request)
          if: github.event_name == 'pull_request'
          run: |
            echo "$GITHUB_HEAD_REF" > GIT_BRANCH
            echo "$(git rev-parse origin/$GITHUB_HEAD_REF)" > GIT_COMMIT_SHA
          

        - name: Build image
          run: |
            docker build -t $(cat TAG) .
        
        - name: Test
          env:
            CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
          run: |
            docker network create --driver bridge test-net
            docker run -d --name db --network=test-net postgres:9.4
            docker run -d -e WHOIS_ENV=test -e RAILS_ENV=test -e APP_DBHOST=db -e GIT_COMMIT_SHA="$(cat GIT_COMMIT_SHA)" -e GIT_BRANCH=$(cat GIT_BRANCH) -e CC_TEST_REPORTER_ID --name whois --network=test-net $(cat TAG) tail -f /dev/null
            docker exec -i whois apt-get install iputils-ping & ping db
            docker exec -i whois rake db:create
            docker exec -i whois rake db:schema:load
            docker exec -i whois rake test

        - name: Get and upload test results
          run: |
            docker exec -i whois ./cc-test-reporter format-coverage --output coverage/codeclimate.json
            docker exec -i whois ./cc-test-reporter sum-coverage coverage/codeclimate.json
            docker exec -i whois ./cc-test-reporter upload-coverage

        - name: Push Docker image to Docker hub
          env:
            USERNAME: ${{ secrets.DOCKER_USERNAME }}
            PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          run: |
            docker login -u "$USERNAME" -p "$PASSWORD"
            docker push $(cat TAG)
